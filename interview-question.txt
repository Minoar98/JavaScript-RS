
// "BMW" + 14 = "BMW" + "14" = "BMW14"
// 5 + 10 + "BMW" = "15BMW"
// 2 + "55" = "255" string concatenation
// 2 - "55" = -53  normal subtraction
// 10 - "BMW"  = 10-NaN = NaN
//"BMW" + 5 + 10 = "BMW" + "5" + 10 = "BMW5" + 10 = "BMW5" +"10" = "BMW510";


'volve' + 14 + 2  ------------------------------------ 'volvo14' + 2 => 'volvo142'
14 + 2 + 'volvo'  ----------------------------------- 16 + 'volvo' => '16volvo'
2 + '33' =  ---------------------------------------------------- '233'
2 - '56' =--------------------------------------------------- -54
2 - 'volvo' = 
2 + 'volvo' = '2volvo'
2 - 4 + 'volvo' = NaN -------------------------------------------- -2 + 'volvo' = '-2volvo'
'34' + (3 + 4) + 'volvo' =  -------------------------- '34' + 7 + 'volvo' => '347' + 'volvo' => '347volvo'
'volvo' + 2 = 'volvo2'
32 / '4' ------------------------------------------------- 32 / 4 => 8
4 * '4' ' ---------------------------------------------------- 4 * 4 => 16
'4' * '4'  -------------------------------------------------- 4 * 4 => 16

14 + 'volvo' + 2 => '14volvo' + 2 => '14volvo2'

var= define, redefine, update - function scope
let = define, update - block scope
const = only define - block scope
x == 1, double equal- check value.
x === 1, triple equal - check value and type.

2nd {} start to end It will be scope.
try and catch use for error handling.
Data type: 
Number, Boolean, string, array, object, statement.

// falsy value - 6
// 0, false, null, undefined, NaN, ''




//1. x= 10,y= 20. make it y = 10; x=20;
// 2. arr=[1, 2, 3] assign that array into another variable.Now make any changes into arr varibale doesnot  affect another variable.
// 3 ['I', 'love', 'JS', 'and', 'React JS'] sort according to element's length
// 4. [1,2 , 3] and [4, 5, 6] -> how to merge two arrays (2 ways)
// 5. people = [
//   { name: 'Alice', age: 25 },
//   { name: 'Bob', age: 30 },
//   { name: 'Charlie', age: 25 }
// ]
// Now, group people by their age.
// Output:
// {
//    '25': [{ name: 'Alice', age: 25 }, { name: 'Charlie', age: 25 }],
//    '30': [{ name: 'Bob', age: 30 }]
// }



const arr = [10, 20, 30, 40, 50];

function func(value) {
  // console.log(value, index, array);
  return value === 35;
}

const arrValue = arr.find(func);
if (arrValue) {
  console.log('Found.')
} else {
  console.log('Not Found.')
}

console.log(arrValue ? 'Found' : 'Not Found'



const ar = [null, 3, '', 'JS'];

console.log(ar.filter((val) => Boolean(val)))

find the truthy value only

group all the falsy value
const ar = [null, 3, '', 'JS'];
console.log(ar.filter((val) => !val))

const ar = [null, 3, '', 'JS'];
console.log(ar.filter((val) => !!!val)

/ Finding Max

const ar = [0, 150, 30, 20, -8, -200];
Math.max(...ar)



1 to 10 randomly find the number
Math.floor((Math.random() * 10) + 1);

0 to 9 randomly find the number
Math.floor((Math.random() * 10));



const a = new Set([1, 2, 3]);
const b = new Set([2, 3, 4]);

const unionSet = new Set([...a, ...b]);
console.log([...unionSet]);


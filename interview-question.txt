
// "BMW" + 14 = "BMW" + "14" = "BMW14"
// 5 + 10 + "BMW" = "15BMW"
// 2 + "55" = "255" string concatenation
// 2 - "55" = -53  normal subtraction
// 10 - "BMW"  = 10-NaN = NaN
//"BMW" + 5 + 10 = "BMW" + "5" + 10 = "BMW5" + 10 = "BMW5" +"10" = "BMW510";


'volve' + 14 + 2  ------------------------------------ 'volvo14' + 2 => 'volvo142'
14 + 2 + 'volvo'  ----------------------------------- 16 + 'volvo' => '16volvo'
2 + '33' =  ---------------------------------------------------- '233'
2 - '56' =--------------------------------------------------- -54
2 - 'volvo' = 
2 + 'volvo' = '2volvo'
2 - 4 + 'volvo' = NaN -------------------------------------------- -2 + 'volvo' = '-2volvo'
'34' + (3 + 4) + 'volvo' =  -------------------------- '34' + 7 + 'volvo' => '347' + 'volvo' => '347volvo'
'volvo' + 2 = 'volvo2'
32 / '4' ------------------------------------------------- 32 / 4 => 8
4 * '4' ' ---------------------------------------------------- 4 * 4 => 16
'4' * '4'  -------------------------------------------------- 4 * 4 => 16

14 + 'volvo' + 2 => '14volvo' + 2 => '14volvo2'

var= define, redefine, update - function scope
let = define, update - block scope
const = only define - block scope
x == 1, double equal- check value.
x === 1, triple equal - check value and type.

2nd {} start to end It will be scope.
try and catch use for error handling.
Data type: 
Number, Boolean, string, array, object, statement.

// falsy value - 6
// 0, false, null, undefined, NaN, ''




//1. x= 10,y= 20. make it y = 10; x=20;
// 2. arr=[1, 2, 3] assign that array into another variable.Now make any changes into arr varibale doesnot  affect another variable.
// 3 ['I', 'love', 'JS', 'and', 'React JS'] sort according to element's length
// 4. [1,2 , 3] and [4, 5, 6] -> how to merge two arrays (2 ways)
// 5. people = [
//   { name: 'Alice', age: 25 },
//   { name: 'Bob', age: 30 },
//   { name: 'Charlie', age: 25 }
// ]
// Now, group people by their age.
// Output:
// {
//    '25': [{ name: 'Alice', age: 25 }, { name: 'Charlie', age: 25 }],
//    '30': [{ name: 'Bob', age: 30 }]
// }



const arr = [10, 20, 30, 40, 50];

function func(value) {
  // console.log(value, index, array);
  return value === 35;
}

const arrValue = arr.find(func);
if (arrValue) {
  console.log('Found.')
} else {
  console.log('Not Found.')
}

console.log(arrValue ? 'Found' : 'Not Found'



const ar = [null, 3, '', 'JS'];

console.log(ar.filter((val) => Boolean(val)))

find the truthy value only

group all the falsy value
const ar = [null, 3, '', 'JS'];
console.log(ar.filter((val) => !val))

const ar = [null, 3, '', 'JS'];
console.log(ar.filter((val) => !!!val)

/ Finding Max

const ar = [0, 150, 30, 20, -8, -200];
Math.max(...ar)



1 to 10 randomly find the number
Math.floor((Math.random() * 10) + 1);

0 to 9 randomly find the number
Math.floor((Math.random() * 10));



const a = new Set([1, 2, 3]);
const b = new Set([2, 3, 4]);

const unionSet = new Set([...a, ...b]);
console.log([...unionSet]);


// 2. Intersection -> [2, 3]
// 2. Difference -> [2]

set

// No duplicate values
// Like an array

// diff between array & set
// 1. array contains duplicate values, set does not
// 2. array maintains ordering, set doesn't





break	        Stops the whole loop
continue	Skips one loop step and goes on

higherorder function

jodi kno function  parameter akare ekta function ney
jodi kno function  parameter faka thaka function and function return kore
both


1. What is the difference between method & function?
2. What is higher order function?
3. What is the difference between `??` and `||`
4. What is the output of the following code:

```
const ar = ['apple', 'orange', 'kiwi']

console.log(ar.shift()); //shift() removes the first element
```
5. Where do we use `...` syntax?   const arr1 = [1, 2];
const arr2 = [...arr1, 3, 4]; 
console.log(arr2); // [1, 2, 3, 4]

6. You have an array `[1, 2, 3, 4, 5]`. How to fetch only first & fifth element using ES6 Syntax.
7. How many `false` value present in javascript? undefined,NaN, "",null, 0, false
,8. `14 + 2 + 'JS' + 4` what is the output?
9. Difference between `undefined` vs `null`? A variable has been declared but not assigned a value.
A variable has been explicitly set to “no value”
10. In which case, I use `==` & `===`?  console.log(null == undefined);  // true  (loose equality)
console.log(null === undefined); // false (strict equality)

11. What is the output of the code? `"Hello" - "World"` = ? NaN
12. Did you describe the following code? `const x = x => x`
13. I want to use `var` instead of `let` & `const`. Then what should I do?
14. Could you please fix the bug of the code?

```js
const person = {
    name: 'Ronaldo',
    jerseyNo: 7
}

const { name, jerseyNo } = person;
console.log(jerseyNumber);

// Rules:
// 1. I want to print exact `jerseyNumber` variable
// 2. Can't use any extra variable
```
15. What is the output of the code?

```js
let name = "W3Schools";

// Destructuring
let [a1, a2, a3, a4, a5] = name;
console.log(a2);
```

16. What is the output of the code?

```js
let name = "W3Schools";

// Destructuring
let [a1, a2, a3, a4, ...a5] = name;
console.log(a5);
```

17. Describe it. `{ x }`
what is operator?
what is array?
why do you use array?
21. `x++` & `++x`

​
Would it print 4 or error?​
4.​ Q:​
​
function varAndLetScoping() {
  var x = 1;
  if (true) {
    let x = 2;
    console.log(x);
  }
  console.log(x);
}​

​
A: Within if block -> 2, outside 1​

5.​ Q: What is js operator?​  Operators are tools you use to do things with variables or values — like adding numbers, comparing values, or assigning data.
6.​ Q: Difference between x++ and ++x.​
7.​ Q: What is coercion in javascript?​
8.​ Q: What is an array?​ 
